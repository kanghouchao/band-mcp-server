name: Publish & Docker

on:
  push:
    tags:
      - 'v*.*.*'  # semver tags for npm publish
      - 'v*'      # broader pattern for docker image tagging
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'

jobs:
  # NPM publish job: run only for semver-like tags (vX.Y.Z or other tags containing a dot)
  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref_name, '.')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing package to npm..."
          npm publish --access public

  # Docker: build + test for PRs
  build-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

  # Docker: build-and-push on any v* tag (includes vX or vX.Y.Z)
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "kanghouchao"
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: kanghouchao/band-mcp-server
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production
